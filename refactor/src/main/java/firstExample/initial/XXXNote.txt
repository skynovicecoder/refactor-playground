What are your impressions about the design of this program?
I would describe it as not well designed and certainly not object oriented.

For a simple program like this, that does not really matter.
There’s nothing wrong with a quick and dirty simple program.
But if this is a representative fragment of a more complex system, then I have some real problems with this program.
That long statement routine in the Customer class does far too much.
Many of the things that it does should really be done by the other classes.


The compiler doesn’t care whether the code is ugly or clean.
But when we change the system, there is a human involved, and humans do care.
A poorly designed system is hard to change.

When you find you have to add a feature to a program,
and the program’s code is not structured in a convenient way to add the feature,
first refactor the program to make it easy to add the feature, then add the feature.

Before you start refactoring, check that you have a solid suite of tests. These tests must be self-checking.

Refactoring changes the programs in small steps.
If you make a mistake, it is easy to find the bug.

Any fool can write code that a computer can understand.
Good programmers write code that humans can understand.